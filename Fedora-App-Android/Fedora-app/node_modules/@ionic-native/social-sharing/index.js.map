{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/social-sharing/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Social Sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#5-web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\n@Plugin({\n  pluginName: 'SocialSharing',\n  plugin: 'cordova-plugin-x-socialsharing',\n  pluginRef: 'plugins.socialsharing',\n  repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone']\n})\n@Injectable()\nexport class SocialSharing extends IonicNativePlugin {\n  /**\n   * Shares using the share sheet\n   * @param message {string} The message you would like to share.\n   * @param subject {string} The subject\n   * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n   * @param url {string} A URL to share\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5\n  })\n  share(\n    message?: string,\n    subject?: string,\n    file?: string | string[],\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n   * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android']\n  })\n  shareWithOptions(options: {\n    message?: string;\n    subject?: string;\n    files?: string | string[];\n    url?: string;\n    chooserTitle?: string;\n  }): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via a specific app.\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android']\n  })\n  canShareVia(\n    appName: string,\n    message?: string,\n    subject?: string,\n    image?: string,\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Twitter\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android']\n  })\n  shareViaTwitter(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android']\n  })\n  shareViaFacebook(\n    message: string,\n    image?: string,\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook with a paste message hint\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @param pasteMessageHint {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android']\n  })\n  shareViaFacebookWithPasteMessageHint(\n    message: string,\n    image?: string,\n    url?: string,\n    pasteMessageHint?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Instagram\n   * @param message {string}\n   * @param image {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android']\n  })\n  shareViaInstagram(message: string, image: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to WhatsApp\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android']\n  })\n  shareViaWhatsApp(\n    message: string,\n    image?: string,\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact\n   * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n   * @param message {string} Message to send\n   * @param image {string} Image to send (does not work on iOS\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android']\n  })\n  shareViaWhatsAppToReceiver(\n    receiver: string,\n    message: string,\n    image?: string,\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via SMS\n   * @param messge {string} message to send\n   * @param phoneNumber {string} Number or multiple numbers seperated by commas\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android']\n  })\n  shareViaSMS(messge: string, phoneNumber: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via email\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android']\n  })\n  canShareViaEmail(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via Email\n   * @param message {string}\n   * @param subject {string}\n   * @param to {string[]}\n   * @param cc {string[]} Optional\n   * @param bcc {string[]} Optional\n   * @param files {string|string[]} Optional URL or local path to file(s) to attach\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n    successIndex: 6,\n    errorIndex: 7\n  })\n  shareViaEmail(\n    message: string,\n    subject: string,\n    to: string[],\n    cc?: string[],\n    bcc?: string[],\n    files?: string | string[]\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via AppName\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android']\n  })\n  shareVia(\n    appName: string,\n    message: string,\n    subject?: string,\n    image?: string,\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * defines the popup position before call the share method.\n   * @param targetBounds {string} left, top, width, height\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS']\n  })\n  setIPadPopupCoordinates(targetBounds: string): void {}\n\n  /**\n   * Save an array of images to the camera roll\n   * @param  {string|string[]} fileOrFileArray Single or multiple files\n   * @returns {Promise<any> }\n   */\n  @Cordova({\n    platforms: ['iOS']\n  })\n  saveToPhotoAlbum(fileOrFileArray: string | string[]): Promise<any> {\n    return;\n  }\n}\n"]}